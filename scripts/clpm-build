#!/bin/sh
":" ; exec sbcl --script "$0" "$@"           # -*- mode: common-lisp; -*-
;;;; Script to easily build CLPM.
;;;;
;;;; This software is part of CLPM. See README.org for more information. See
;;;; LICENSE for license information.

(in-package #:cl-user)

(require :asdf)

(defvar *setup-file-pathname* *load-truename*
  "The pathname to this file.")

(defvar *root-pathname* (uiop:pathname-parent-directory-pathname
                         (uiop:pathname-directory-pathname *setup-file-pathname*))
  "The pathname to the root directory of the CLPM release being built.")

(defvar *build-root-pathname* (merge-pathnames "build/"
                                               *root-pathname*)
  "The pathname to the root of the build directory. Defaults to build/ inside
*ROOT-PATHNAME*")

(defun setup-asdf ()
  (let ((build-cache (merge-pathnames "cl-cache/" *build-root-pathname*)))
    (asdf:clear-configuration)
    (asdf:initialize-source-registry `(:source-registry
                                       :ignore-inherited-configuration
                                       (:tree ,*root-pathname*)))))

(setup-asdf)

(asdf:load-system :unix-opts)

(opts:define-opts
  (:name :help
   :description "print this help text"
   :short #\h
   :long "help")
  (:name :cache
   :description "Cache CLPM FASLs here"
   :long "cache"
   :arg-parser #'pathname
   :meta-var "pathname"))

(defun build ()
  (multiple-value-bind (opts free-args)
      (opts:get-opts)
    (when (getf opts :help)
      (opts:describe)
      (format t "~S~%" opts)
      (uiop:quit))
    (let ((raw-build-cache (or (getf opts :cache)
                               (uiop:getenv "CLPM_BUILD_CACHE_DIR")))
          build-cache)
      (when raw-build-cache
        (setf build-cache (uiop:ensure-directory-pathname raw-build-cache)))
      (when (and raw-build-cache
                 (not (uiop:absolute-pathname-p build-cache)))
        (setf build-cache (uiop:resolve-absolute-location (list (uiop:getcwd) build-cache))))
      (format uiop:*stderr*
              "I will build CLPM from sources located at ~A~%The built files will be located at ~Abin/~%~%~%"
              *root-pathname*
              *build-root-pathname*)
      (when build-cache
        (asdf:initialize-output-translations `(:output-translations
                                               :ignore-inherited-configuration
                                               (:root (,build-cache :implementation :**/ :*.*.*)))))
      (asdf:make :clpm))))

(build)
